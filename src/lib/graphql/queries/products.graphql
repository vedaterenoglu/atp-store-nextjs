# Import fragments
#import "../fragments/product.graphql"

# Get all products with pagination
query GetProducts(
  $limit: Int = 12
  $offset: Int = 0
  $where: products_bool_exp
  $order_by: [products_order_by!]
) {
  products(limit: $limit, offset: $offset, where: $where, order_by: $order_by) {
    ...ProductDetailFields
    category {
      ...CategoryFields
    }
  }
  products_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

# Get single product by ID
query GetProductById($id: uuid!) {
  products_by_pk(id: $id) {
    ...ProductDetailFields
    category {
      ...CategoryFields
    }
    # Related products
    category {
      products(limit: 4, where: { id: { _neq: $id } }) {
        ...ProductBasicFields
      }
    }
  }
}

# Get product by slug
query GetProductBySlug($slug: String!) {
  products(where: { slug: { _eq: $slug } }, limit: 1) {
    ...ProductDetailFields
    category {
      ...CategoryFields
    }
  }
}

# Search products
query SearchProducts($search: String!) {
  products(
    where: {
      _or: [{ name: { _ilike: $search } }, { description: { _ilike: $search } }]
    }
  ) {
    ...ProductBasicFields
  }
}
